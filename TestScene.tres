[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://chsrd7cu7i5oj"]

[sub_resource type="Gradient" id="Gradient_o8mpd"]
offsets = PackedFloat32Array(0, 0.528736, 1)
colors = PackedColorArray(1, 0, 0, 1, 0.0833333, 1, 0, 1, 0, 0.416667, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_8ldj4"]
gradient = SubResource("Gradient_o8mpd")
width = 5
height = 1289
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.5, 0.492)
repeat = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_a7130"]
texture = SubResource("GradientTexture2D_8ldj4")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_t6y5q"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_inth2"]
source = 5

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_2y7eu"]
operator = 4

[sub_resource type="Gradient" id="Gradient_qp8xq"]
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_6ogwo"]
gradient = SubResource("Gradient_qp8xq")
width = 1000
height = 300
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.503, 0.5)
repeat = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_vwvmr"]
texture = SubResource("GradientTexture2D_6ogwo")

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_d0e6j"]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_6;



void fragment() {
	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(TEXTURE, UV);


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// Texture2D:6
	vec4 n_out6p0 = texture(tex_frg_6, UV);


// ColorOp:7
	vec3 n_out7p0 = min(vec3(n_out2p0.xyz), vec3(n_out6p0.xyz));


	vec3 n_out5p0;
// ColorOp:5
	{
		float base = vec3(n_out4p0.xyz).x;
		float blend = n_out7p0.x;
		if (base < 0.5) {
			n_out5p0.x = 2.0 * base * blend;
		} else {
			n_out5p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out4p0.xyz).y;
		float blend = n_out7p0.y;
		if (base < 0.5) {
			n_out5p0.y = 2.0 * base * blend;
		} else {
			n_out5p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out4p0.xyz).z;
		float blend = n_out7p0.z;
		if (base < 0.5) {
			n_out5p0.z = 2.0 * base * blend;
		} else {
			n_out5p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	COLOR.rgb = n_out5p0;


}
"
graph_offset = Vector2(-854.007, 124.943)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(540, 220)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_a7130")
nodes/fragment/2/position = Vector2(-880, 300)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_t6y5q")
nodes/fragment/3/position = Vector2(-400, 220)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_inth2")
nodes/fragment/4/position = Vector2(-140, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorOp_2y7eu")
nodes/fragment/5/position = Vector2(162.769, 314.26)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_vwvmr")
nodes/fragment/6/position = Vector2(-860, 600)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorOp_d0e6j")
nodes/fragment/7/position = Vector2(-369.991, 513.323)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 4, 0, 5, 0, 5, 0, 0, 0, 2, 0, 7, 0, 6, 0, 7, 1, 7, 0, 5, 1)
